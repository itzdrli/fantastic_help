datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  username  String   @unique
  password  String
  avatar    String
  role      Role     @default(USER)
  tickets   Ticket[] @relation("CreatedTickets")
  replies   Reply[]
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date
}

model Ticket {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  status      Status   @default(OPEN)
  creator     User     @relation("CreatedTickets", fields: [creatorId], references: [id])
  creatorId   String   @db.ObjectId
  replies     Reply[]
  attachments File[]
  createdAt   DateTime @default(now()) @db.Date
  updatedAt   DateTime @updatedAt @db.Date
}

model Reply {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  content   String
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  ticketId  String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  files     File[]
  createdAt DateTime @default(now()) @db.Date
  updatedAt DateTime @updatedAt @db.Date
}

model File {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  filename  String
  path      String
  url       String
  createdAt DateTime @default(now())
  ticketId  String   @db.ObjectId
  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  replyId   String?  @db.ObjectId
  reply     Reply?   @relation(fields: [replyId], references: [id])
}

enum Role {
  ADMIN
  USER
}

enum Status {
  OPEN
  CLOSED
}